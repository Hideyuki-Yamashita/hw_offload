FROM yasufum/suricata-base:18.04

ARG rte_sdk
ARG rte_target
ARG home_dir
ARG dpdk_repo
ARG dpdk_branch
ARG suricata_repo
ARG suricata_branch
ARG suricata_dir

ENV http_proxy ${http_proxy}
ENV https_proxy $https_proxy
ENV no_proxy ${no_proxy}
ENV RTE_SDK ${rte_sdk}
ENV RTE_TARGET ${rte_target}
ENV INSTALL_SURICATA_SH install_suricata.sh
ENV PATH ${rte_sdk}/${rte_target}/app:${PATH}
ENV PATH ${home_dir}/${suricata_dir}/src:${PATH}
ENV DEBIAN_FRONTEND noninteractive

# NOTE: There two ways for compiling suricata with DPDK. One is using sources
# of tar ball, and another one is from github. If building suricata container
# image, second case is failed because `source-dpdk.c` is not excluding from
# Makefile for a reason I do not know why. However, you can compile it after
# launching the container, but you have to compile everytime you launch the
# container.
# Tow of cases labeled as `Case 1` and `Case 2` in sections below and this
# Dockerfile support both of compilation, and default is first one. If you
# use `Case 2`, you comment out `Case 1` and activate `Case 2` by yourself.

# NOTE: You can another case `Case 3`, but it does not work currently.

ENV SURICATA_SRCDIR suricata-4.1.4
ENV SURICATA_TGZ ${SURICATA_SRCDIR}.tar.gz
ENV SURICATA_DOWNLOAD https://www.openinfosecfoundation.org/download/${SURICATA_TGZ}

WORKDIR $home_dir
RUN git clone ${dpdk_branch} ${dpdk_repo}

# Compile DPDK
WORKDIR ${rte_sdk}
RUN make config T=${rte_target} O=${rte_target}
WORKDIR ${rte_sdk}/${rte_target}
RUN make -j 4

# NOTE: Case 1
#WORKDIR ${home_dir}
#RUN wget ${SURICATA_DOWNLOAD}
#RUN tar zxvf ${SURICATA_TGZ}
#WORKDIR ${home_dir}/${SURICATA_SRCDIR}
#RUN RTE_SDK=${rte_sdk} RTE_TARGET=${rte_target} autoconf
#RUN RTE_SDK=${rte_sdk} RTE_TARGET=${rte_target} sh configure --enable-dpdk
#RUN make -j 10
#ENV PATH ${SURICATA_SRCDIR}/src:${PATH}

# NOTE: Case 2
# Compiling suricata with Dockerfile is failed if clone suricata
# while building this image. So, do it after app container is launched.
# Create suricata install script.
WORKDIR ${home_dir}
RUN echo "#!/bin/bash" > ${home_dir}/${INSTALL_SURICATA_SH}
RUN echo "" >> ${home_dir}/${INSTALL_SURICATA_SH}
RUN echo "git clone ${suricata_repo}" >> ${home_dir}/${INSTALL_SURICATA_SH}
RUN echo "cd ${suricata_dir}" >> ${home_dir}/${INSTALL_SURICATA_SH}
RUN echo "autoconf" >> ${home_dir}/${INSTALL_SURICATA_SH}
RUN echo "./configure --enable-dpdk" >> ${home_dir}/${INSTALL_SURICATA_SH}
RUN echo "make -j 10" >> ${home_dir}/${INSTALL_SURICATA_SH}
RUN echo "make install" >> ${home_dir}/${INSTALL_SURICATA_SH}
RUN chmod 775 ${home_dir}/${INSTALL_SURICATA_SH}

# NOTE: Case 3 Compiling suricata with Dockerfile does not work
# Compile suricata
#RUN git clone ${suricata_branch} ${suricata_repo}
#WORKDIR ${home_dir}/${suricata_dir}
#RUN RTE_SDK=${rte_sdk} RTE_TARGET=${rte_target} autoconf
#RUN RTE_SDK=${rte_sdk} RTE_TARGET=${rte_target} sh configure --enable-dpdk
#RUN make -j 10

# Set working directory when container is launched
WORKDIR ${home_dir}
ADD env.sh ${home_dir}/env.sh
RUN echo "source ${home_dir}/env.sh" >> ${home_dir}/.bashrc
